stages:
  - build
  - test
  - deploy

frontend-build-artifacts:
  stage: build
  cache:
    key: nodejs
    paths:
      - ${NODE_CACHE_PATH}
      - ${NPM_CACHE_PATH}
  script:
      - cd frontend
      - npm ci --cache ${NPM_CACHE_PATH} --prefer-offline
      - npm run build
      - mkdir frontend-pelmeni-store-${APP_VERSION}
      - mv dist frontend-pelmeni-store-${APP_VERSION}/public_html
  artifacts:
    untracked: false
    expire_in: "7 days"
    paths:
      - ${CI_PROJECT_DIR}/frontend/frontend-pelmeni-store-${APP_VERSION}/public_html


frontend-build-docker-image:
  stage: build
  cache:
    key: nodejs
    paths:
      - ${NODE_CACHE_PATH}
      - ${NPM_CACHE_PATH}
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - ls -la ${CI_PROJECT_DIR}
    - ls -la ${CI_PROJECT_DIR}/frontend
    - cp ${NPM_CACHE_PATH} frontend/ -r
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >
      /kaniko/executor
      --use-new-run
      --snapshotMode=redo
      --cache=true
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/pelmeni-frontend:${CI_PIPELINE_ID}"}"
